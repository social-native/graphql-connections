name: Continuous Integration
on: [push]

jobs:
    install:
        name: Install dependencies
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [macos-latest, ubuntu-latest]
        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js 13.x
              uses: actions/setup-node@v1
              with:
                  node-version: '13.x'
                  registry-url: 'https://registry.npmjs.org'

            - name: Cache node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}

            - name: Install NPM dependencies
              # ignore scripts b/c they could steal NODE_AUTH_TOKEN.
              run: npm install --ignore-scripts
              env:
                NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    build-verification:
        name: Build js bundle
        needs: [install]
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [macos-latest, ubuntu-latest]
        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js 13.x
              uses: actions/setup-node@v1
              with:
                  node-version: '13.x'

            - name: Restore cached node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}

            - name: Run build
              run: npm run build

    lint:
        name: Run linter
        needs: [install]
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [macos-latest, ubuntu-latest]
        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js 13.x
              uses: actions/setup-node@v1
              with:
                  node-version: '13.x'

            - name: Restore cached node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}

            - name: Run linter
              run: npm run lint

    test:
        name: Run tests
        needs: [install]
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [macos-latest, ubuntu-latest]
        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js 13.x
              uses: actions/setup-node@v1
              with:
                  node-version: '13.x'

            - name: Restore cached node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}

            - name: Run test suit
              run: npm run test

    beauty-check:
        name: Run prettier
        needs: [install]
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [macos-latest, ubuntu-latest]
        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js 13.x
              uses: actions/setup-node@v1
              with:
                  node-version: '13.x'

            - name: Restore cached node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}

            - name: Run prettier
              run: npm run prettier -- --check

    type-check:
        name: Run TSC type check
        needs: [install]
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            os: [macos-latest, ubuntu-latest]
        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js 13.x
              uses: actions/setup-node@v1
              with:
                  node-version: '13.x'

            - name: Restore cached node modules
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}

            - name: Run type check
              run: npm run type-check